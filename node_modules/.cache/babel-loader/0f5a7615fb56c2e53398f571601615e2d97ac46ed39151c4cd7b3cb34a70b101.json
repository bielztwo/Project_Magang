{"ast":null,"code":"import Chart from 'chart.js';\nimport axios from '@/axios';\nexport default {\n  data() {\n    return {\n      item: ''\n    };\n  },\n  methods: {\n    getData() {\n      axios.get(\"/\").then(response => {\n        this.item = response.data;\n        this.updateChart();\n      }).catch(error => {\n        console.log('Kamu salah', error);\n      });\n    },\n    updateChart() {\n      // Access the canvas element and create a chart with the fetched data\n      let ctx = document.getElementById('sensorChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        // Set the chart type to bar\n        data: {\n          labels: this.item.map(item => item.row.created_at),\n          // Set the labels for the x-axis\n          datasets: [{\n            label: 'Sensor Data',\n            // Set the label for the chart\n            data: this.item.map(item => item.value),\n            // Set the data for the y-axis\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            // Set the background color for the bars\n            borderColor: 'rgba(75, 192, 192, 1)',\n            // Set the border color for the bars\n            borderWidth: 1 // Set the border width for the bars\n          }]\n        },\n\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  },\n  async mounted() {\n    this.loaded = false;\n    try {\n      setInterval(this.getData, 2000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n};","map":{"version":3,"names":["Chart","axios","data","item","methods","getData","get","then","response","updateChart","catch","error","console","log","ctx","document","getElementById","getContext","type","labels","map","row","created_at","datasets","label","value","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","mounted","loaded","setInterval","e"],"sources":["C:\\Users\\LEGION\\t\\Project_Magang-1\\src\\components\\HelloWorld.vue"],"sourcesContent":["<!-- eslint-disable no-undef -->\r\n<template>\r\n  <div class=\"hello\">\r\n    <h1>Fetch Sensor Data</h1>\r\n    <h2 style=\"text-align: center;\">Items</h2>\r\n    <canvas id=\"sensorChart\"></canvas>\r\n    <body>\r\n      <h4 v-for=\"items in item\" :key=\"items.id\">Water Level: {{ items.ultrasonic }} Cm</h4>\r\n      <h4 v-for=\"items in item\" :key=\"items.id\">Nutrition: {{ items.nutrition }} PPM</h4>\r\n      <h4 v-for=\"items in item\" :key=\"items.id\">Water Temperature: {{ items.temperature }} C</h4>\r\n      <h4 v-for=\"items in item\" :key=\"items.id\">Ph: {{ items.ph }} </h4>\r\n    </body>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Chart from 'chart.js';\r\nimport axios from '@/axios';\r\nexport default {\r\n  data(){\r\n    return{\r\n      item:'',\r\n    }\r\n  },\r\n  methods:{\r\n    getData(){\r\n      axios\r\n      .get(\"/\")\r\n      .then((response) =>{\r\n        this.item = response.data;\r\n        this.updateChart();\r\n      })\r\n      .catch((error)=>{\r\n        console.log('Kamu salah',error);\r\n      })\r\n    },\r\n    updateChart(){\r\n    // Access the canvas element and create a chart with the fetched data\r\n      let ctx = document.getElementById('sensorChart').getContext('2d');\r\n      new Chart(ctx, {\r\n        type: 'bar', // Set the chart type to bar\r\n        data: {\r\n          labels: this.item.map(item => item.row.created_at), // Set the labels for the x-axis\r\n          datasets: [{\r\n            label: 'Sensor Data', // Set the label for the chart\r\n            data: this.item.map(item => item.value), // Set the data for the y-axis\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)', // Set the background color for the bars\r\n            borderColor: 'rgba(75, 192, 192, 1)', // Set the border color for the bars\r\n            borderWidth: 1 // Set the border width for the bars\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n  },\r\n  async mounted () {\r\n    this.loaded = false\r\n\r\n    try {\r\n      setInterval(this.getData, 2000);\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh4 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n\r\nh2{\r\n  margin-bottom: 70px;\r\n}\r\n.hello{\r\n  padding: 50px;\r\n  text-align: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  display: column;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAgBA,OAAOA,KAAI,MAAO,UAAU;AAC5B,OAAOC,KAAI,MAAO,SAAS;AAC3B,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,IAAI,EAAC;IACP;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,OAAOA,CAAA,EAAE;MACPJ,KAAI,CACHK,GAAG,CAAC,GAAG,EACPC,IAAI,CAAEC,QAAQ,IAAI;QACjB,IAAI,CAACL,IAAG,GAAIK,QAAQ,CAACN,IAAI;QACzB,IAAI,CAACO,WAAW,EAAE;MACpB,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAG;QACdC,OAAO,CAACC,GAAG,CAAC,YAAY,EAACF,KAAK,CAAC;MACjC,CAAC;IACH,CAAC;IACDF,WAAWA,CAAA,EAAE;MACb;MACE,IAAIK,GAAE,GAAIC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACjE,IAAIjB,KAAK,CAACc,GAAG,EAAE;QACbI,IAAI,EAAE,KAAK;QAAE;QACbhB,IAAI,EAAE;UACJiB,MAAM,EAAE,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAACjB,IAAG,IAAKA,IAAI,CAACkB,GAAG,CAACC,UAAU,CAAC;UAAE;UACpDC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,aAAa;YAAE;YACtBtB,IAAI,EAAE,IAAI,CAACC,IAAI,CAACiB,GAAG,CAACjB,IAAG,IAAKA,IAAI,CAACsB,KAAK,CAAC;YAAE;YACzCC,eAAe,EAAE,yBAAyB;YAAE;YAC5CC,WAAW,EAAE,uBAAuB;YAAE;YACtCC,WAAW,EAAE,EAAE;UACjB,CAAC;QACH,CAAC;;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;YACf;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACD,MAAMC,OAAMA,CAAA,EAAK;IACf,IAAI,CAACC,MAAK,GAAI,KAAI;IAElB,IAAI;MACFC,WAAW,CAAC,IAAI,CAAC/B,OAAO,EAAE,IAAI,CAAC;IACjC,EAAE,OAAOgC,CAAC,EAAE;MACVzB,OAAO,CAACD,KAAK,CAAC0B,CAAC;IACjB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}